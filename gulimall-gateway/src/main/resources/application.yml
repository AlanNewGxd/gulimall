spring:
  cloud:
    gateway:
#      discovery:
#        locator:
#          enabled: true   #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务
#          lower-case-service-id: true  #将请求路径上的服务名配置为小写
      routes:  #在路由规则的顺序上，将精确的路由规则放置到模糊的路由规则的前面，否则的话，精确的路由规则将不会被匹配到，类似于异常体系中try catch子句中异常的处理顺序。
        - id:  baidu_route
          uri: https://www.baidu.com/
          predicates:
            - Path=/app/
          filters:
#            - RewritePath=/app/(?<segment>.*),/my/$\{segment}

        - id:  qq_route
          uri: https://www.qq.com/
          predicates:
            - Query=url, qq

        - id:  product_route
          uri: lb://gulimall-product # 注册中心的商品服务
          predicates:
            - Path=/api/product/**
          filters:
            - RewritePath=/api/(?<segment>/?.*),/$\{segment}

        - id:  admin_route
          uri: lb://renren-fast     # 路由给renren-fast
          predicates:               # 什么情况下路由给它
            - Path=/api/**          # 默认前端项目都带上api前缀，就是我们前面题的localhost:88/api
          filters:
            - RewritePath=/api/(?<segment>.*),/renren-fast/$\{segment}  # 把/api/* 改变成 /renren-fast/*
          #http://localhost:88/api/captcha.jpg  http://localhost:8080/renren-fast/captcha.jpg


